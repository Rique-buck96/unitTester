[
    [
        "Explain and describe external fragmentation, how does it occur?",
        "External fragmentation occurs when sections of memory blocks are unused between portions of allocated memory because the individual blocks are not large enough for a given process. ",
        "section",
        "memory block",
        "unused",
        "between",
        "allocated memory",
        "individual",
        "not large",
        "given process"
    ],
    [
        "Explain and describe Relocation, how often should it be performed?",
        "Moving the memory address of a process to another location. Should occur when a certain memory percentage is busy, when there are waiting jobs, or after a prescribed time period has elapsed. ",
        "mov",
        "memory address",
        "another location",
        "memory percentage is busy",
        "waiting job",
        "prescribed",
        "time",
        "period"
    ],
    [
        "In a multiprogramming and time-sharing environment, several users share the system simultaneously. This situation can result in various security problems. Name two such problems. Can we ensure the same degree of security in a time-share machine as we have in a dedicated machine? Explain.",
        "Copying or stealing another user's programs or data. Using system resources with improper accounting. Unliekly because a dedicated machine can focus on specific tasks and programs to be executed for a user allowing for greater control compared whereas a time-share machine required divided focus among multiple programs and users which add more complexity thus leading to more vulnerabilities. ",
        "copy",
        "steal",
        "data",
        "program",
        "using",
        "resource",
        "improper accounting",
        "focus",
        "specific tasks",
        "greater control",
        "divided focus",
        "multiple programs",
        "complexity",
        "vulnerabilities"
    ],
    [
        "explain the fundamental differences between interactive, batch, real-time and embedded systems.",
        "Batch: jobs entered as a whole and in sequence. Interactive: allow multiple jobs, faster turn around than batch systems, slower than real time, share processing power. Real-time: used in time critical environments (spacecraft, airport control, medical etc), relicability is crucial. Embedded Systems: computers placed inside other products (cars, elevators etc), adds features and capabilities. Performs specific set of programs, non-interchangable among systems.",
        "whole",
        "in sequence",
        "multiple jobs",
        "turn around",
        "time-critical env",
        "placed inside",
        "specific set of programs",
        "non-interchangable"
    ],
    [
        "Give at least two real life examples of deadlock",
        "two people with their back to each other and their feet on withside of a steep drop. They need to reach the top of the cliff but neither has enough room to move their legs so they remain trapped inside the drop. A gridlock in a traffic jam. Four intersections on a road where no traffic can travel past the intersection as another line of traffic are blocking the road.",
        "two people",
        "back",
        "eachother",
        "feet",
        "steep drop",
        "reach top",
        "cliff",
        "neither person",
        "enough room",
        "move",
        "trapped",
        "grid",
        "lock",
        "traffic jam",
        "four intersections",
        "travel past",
        "blocking"
    ],
    [
        "Explain the differences between buffering and blocking. ",
        "Blocking is the process of group several components into blocks. Buffering is the process or reading and writing blocks from a buffer.",
        "group",
        "several component",
        "into block",
        "reading and writing",
        "from",
        "buffer"
    ],
    [
        "Compare and contrast internal and external fragmentation. Explain the circumstances where one might be preferred over the other. ",
        "(diagrams needed) Internal fragmentation may be preferable in circumstances where an operating system does not have to be continuously running as the amount of overall memory wastage is typically less, but gradually accumulates. In addition, it is more predictcable than external because most of the wasted space is determined by the memory allocator's parameters. ",
        "continuous",
        "running",
        "overall memory wastage",
        "less",
        "gradually",
        "accumulates",
        "predictable",
        "determined by",
        "memory allocator",
        "parameter"
    ],
    [
        "Give at least two real life examples of a race.",
        "Two mothers are running late to pick up their children. The mothers tell their children to wait out the front of schol. They each pick up the first child they see but end up taking home the wrong child. Car filling up at gas station. One of the passengers pays for the gas before the petrol has finished filling. Driver decides to add more petrol than the passenger paid. Petrol station now has less money/petrol than it should. ",
        "mother",
        "late",
        "wait out",
        "school",
        "pick up",
        "first child",
        "see",
        "wrong child",
        "car",
        "gas",
        "station",
        "pay",
        "before",
        "finish",
        "more",
        "less money"
    ],
    [
        "Give at least two real life examples of starvation.",
        "A hungry person is waiting for a pizza to be delivered but the pizza store is very busy and the person starved to death while waiting for the pizza. A patient is waiting for their name to be called by the next available doctor but the doctor continues reading out other patient names and misses the waiting patient so the patient dies.",
        "hungry person",
        "pizza",
        "delive",
        "busy",
        "starve",
        "wait",
        "patient",
        "name",
        "next avail",
        "other patie",
        "misses",
        "dies"
    ],
    [
        "Explain and describe multiprogramming, why is it used?",
        "used in order to give the appearance that several processes are running at the same time on a uniprocessor. ",
        "appearance",
        "several processes",
        "running",
        "same time",
        "uniprocessor"
    ],
    [
        "Explain and describe internal fragmentation, how does it occur?",
        "Internal fragmentation is the empty space left over inside an allocated block of memory. Occurs when the memory manager leaves empty space inside a block of memory for a process. Usually occurs with memory managers using fixed sized memory blocks.",
        "empty space",
        "left",
        "over",
        "inside",
        "allocate block",
        "memory manager",
        "leaves",
        "fixed size"
    ],
    [
        "Describe the purpose of a buffer and give an example from your own experience whre its use clearly benefits system response.",
        "The purpose of a buffer is to hold data before it is used. An example of when it is beneficial is while using Youtube for watching videos. Part of the video is first loaded into the buffer, then the video is played from the buffe, then in case there is any network congestion, the video is less likely to be affected. ",
        "hold data",
        "before",
        "use",
        "youtube",
        "video",
        "loaded into",
        "buffer",
        "played from",
        "network congestion",
        "less likely",
        "affected"
    ],
    [
        "Explain the fundamental differences between internal fragmentation and external fragmentation. For each of the four memory management systems (single user, fixed, dynamic, relocatable dynamic), identify which one causes each type of fragmentation.",
        "Internal fragmentation occurs when the memory allocator leaves extra space inside a block of memory that has been allocated for a client. Usually happens when the memory must be cut into blocks of certain sizes, if a client needs 10 bytes of data but is given 16 then 6 bytes of memory are wasted. External fragmentation occurs then sections of memory blocks are unused between portions of allocated memory. Despite there being enough free memory blocks for a fourth process because the blocks are not contiguous the process can't be loaded into memory. Single user: external. Fixed: internal. Dynamic: External. Relocatable: External, though usually compacted. ",
        "memory allocator",
        "eaxtra space",
        "inside",
        "block",
        "allocated for",
        "client",
        "sections",
        "memory blocks",
        "unused",
        "between portion",
        "allocated memory",
        "not contiguous"
    ],
    [
        "Describe how dealocks can be resolved",
        "A deadlock requires 4 conditions to occur: Mutual exclusion, allowing only one process access to a dedicated resource. Resource holding, not releasing the resource, waiting for another job to retreat. No pre-emption, lack of temp reallocation of resources. Circular wait, each process waiting for another to voluntarily release so at least one can continue. If one of these condition are removed then deadlocking can be resolved.",
        "four conditions",
        "mutual exclusion",
        "one process access",
        "dedicated resource",
        "resource holding",
        "not releas",
        "wait",
        "another job",
        "retreat",
        "no pre-emption",
        "lack",
        "temp",
        "circular wait"
    ],
    [
        "Explain and describe Compaction, why is it needed? ",
        "Compaction is the operation of reclaiming fragmented memory space sections. It is needed to eliminate external fragmentation in memory and improve throughput.",
        "reclaim",
        "fragment",
        "space section",
        "eliminate",
        "exter",
        "improve throughput"
    ]
]